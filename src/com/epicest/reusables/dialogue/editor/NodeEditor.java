/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.epicest.reusables.dialogue.editor;

import com.epicest.reusables.dialogue.DialogueNode;
import java.util.HashMap;
import javax.swing.DefaultListModel;

/**
 *
 * @author mjspr
 */
public class NodeEditor extends javax.swing.JFrame {

 protected TreeEditor parent;
 protected String nodeName;
 protected DialogueNode node;

 public NodeEditor(TreeEditor parent, String node) {
  this.parent = parent;
  nodeName = node;
  this.node = parent.nodes.get(node);
  initComponents();
  refreshLists();
  setLocationRelativeTo(parent);
  setMinimumSize(getSize());
 }

 /**
  * This method is called from within the constructor to initialize the form.
  * WARNING: Do NOT modify this code. The content of this method is always
  * regenerated by the Form Editor.
  */
 @SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
 private void initComponents() {

  nameLabel = new javax.swing.JLabel();
  nameTextField = new javax.swing.JTextField();
  separator1 = new javax.swing.JSeparator();
  inputLabel = new javax.swing.JLabel();
  inputTextField = new javax.swing.JTextField();
  outputLabel = new javax.swing.JLabel();
  outputTextField = new javax.swing.JTextField();
  audioLabel = new javax.swing.JLabel();
  audioTextField = new javax.swing.JTextField();
  separator2 = new javax.swing.JSeparator();
  listenerLabel = new javax.swing.JLabel();
  listenerTextField = new javax.swing.JTextField();
  separator3 = new javax.swing.JSeparator();
  parentsScrollPane = new javax.swing.JScrollPane();
  parentsList = new javax.swing.JList<>();
  childrenScrollPane = new javax.swing.JScrollPane();
  childrenList = new javax.swing.JList<>();
  separator4 = new javax.swing.JSeparator();
  addChildButton = new javax.swing.JButton();
  removeChildButton = new javax.swing.JButton();
  okButton = new javax.swing.JButton();

  setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
  setTitle("Node Editor");
  setAlwaysOnTop(true);

  nameLabel.setText("Name: ");

  nameTextField.setText(nodeName);

  inputLabel.setText("Player Input: ");

  inputTextField.setText(node.getIn());

  outputLabel.setText("NPC Output: ");

  outputTextField.setText(node.getOut());

  audioLabel.setText("Audio Output: ");

  audioTextField.setText(node.getAudio());

  listenerLabel.setText("Listener: ");

  listenerTextField.setText(node.getSPL());

  parentsScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Parents"));
  parentsScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

  parentsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
  parentsList.addMouseListener(new java.awt.event.MouseAdapter() {
   public void mouseClicked(java.awt.event.MouseEvent evt) {
    parentsListMouseClicked(evt);
   }
  });
  parentsScrollPane.setViewportView(parentsList);

  childrenScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Children"));
  childrenScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

  childrenList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
  childrenList.addMouseListener(new java.awt.event.MouseAdapter() {
   public void mouseClicked(java.awt.event.MouseEvent evt) {
    childrenListMouseClicked(evt);
   }
  });
  childrenScrollPane.setViewportView(childrenList);

  addChildButton.setText("Add Child");
  addChildButton.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    addChildButtonActionPerformed(evt);
   }
  });

  removeChildButton.setText("Remove Child");
  removeChildButton.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    removeChildButtonActionPerformed(evt);
   }
  });

  okButton.setText("Ok");
  okButton.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
    okButtonActionPerformed(evt);
   }
  });

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(layout.createSequentialGroup()
    .addContainerGap()
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addComponent(separator3, javax.swing.GroupLayout.Alignment.TRAILING)
     .addComponent(separator1)
     .addComponent(separator2, javax.swing.GroupLayout.Alignment.TRAILING)
     .addGroup(layout.createSequentialGroup()
      .addComponent(nameLabel)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
      .addComponent(nameTextField))
     .addGroup(layout.createSequentialGroup()
      .addComponent(inputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addComponent(inputTextField))
     .addGroup(layout.createSequentialGroup()
      .addComponent(outputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addComponent(outputTextField))
     .addGroup(layout.createSequentialGroup()
      .addComponent(audioLabel)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addComponent(audioTextField))
     .addGroup(layout.createSequentialGroup()
      .addComponent(listenerLabel)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addComponent(listenerTextField))
     .addComponent(separator4)
     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
      .addComponent(addChildButton)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addComponent(removeChildButton)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(okButton))
     .addComponent(childrenScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
     .addComponent(parentsScrollPane))
    .addContainerGap())
  );
  layout.setVerticalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(layout.createSequentialGroup()
    .addContainerGap()
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(separator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(inputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(outputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(outputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(audioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(audioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(separator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(listenerLabel)
     .addComponent(listenerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(separator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(parentsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(childrenScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(separator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
     .addComponent(okButton)
     .addComponent(addChildButton)
     .addComponent(removeChildButton))
    .addContainerGap())
  );

  pack();
 }// </editor-fold>//GEN-END:initComponents

 private void parentsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parentsListMouseClicked
  if (evt.getClickCount() == 2) {
   parent.edit(parentsList.getName());
  }
 }//GEN-LAST:event_parentsListMouseClicked

 private void childrenListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_childrenListMouseClicked
  if (evt.getClickCount() == 2) {
   parent.edit(childrenList.getName());
  }
 }//GEN-LAST:event_childrenListMouseClicked

 private void addChildButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChildButtonActionPerformed
  node.addChild(parent.nodes.get(parent.nodeList.getSelectedValue()));
  refreshLists();
 }//GEN-LAST:event_addChildButtonActionPerformed

 private void removeChildButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeChildButtonActionPerformed
  node.removeChild(parent.nodes.get(childrenList.getSelectedValue()));
  refreshLists();
 }//GEN-LAST:event_removeChildButtonActionPerformed

 private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
  parent.nodes.remove(nodeName);
  parent.nodes.put(nameTextField.getText(), node);
  node.setIn(inputTextField.getText());
  node.setOut(outputTextField.getText());
  node.setAudio(audioTextField.getText());
  node.setSPL(listenerTextField.getText());
  parent.refreshLists();
  dispose();
 }//GEN-LAST:event_okButtonActionPerformed

 protected void refreshLists() {
  DefaultListModel<String> lmp = new DefaultListModel<String>();
  DefaultListModel<String> lmc = new DefaultListModel<String>();
  for (DialogueNode node : node.getParents()) {
   String key = getKey(parent.nodes, node);
   if (key != null) {
    lmp.addElement(key);
   }
  }
  for (DialogueNode node : node.getChildren()) {
   String key = getKey(parent.nodes, node);
   if (key != null) {
    lmc.addElement(key);
   }
  }
  parentsList.setModel(lmp);
  childrenList.setModel(lmc);
 }

 static String getKey(HashMap<String, DialogueNode> nodes, DialogueNode node) {
  for (String key : nodes.keySet()) {
   if (nodes.get(key) == node) {
    return key;
   }
  }
  return null;
 }

 // Variables declaration - do not modify//GEN-BEGIN:variables
 private javax.swing.JButton addChildButton;
 private javax.swing.JLabel audioLabel;
 private javax.swing.JTextField audioTextField;
 private javax.swing.JList<String> childrenList;
 private javax.swing.JScrollPane childrenScrollPane;
 private javax.swing.JLabel inputLabel;
 private javax.swing.JTextField inputTextField;
 private javax.swing.JLabel listenerLabel;
 private javax.swing.JTextField listenerTextField;
 private javax.swing.JLabel nameLabel;
 private javax.swing.JTextField nameTextField;
 private javax.swing.JButton okButton;
 private javax.swing.JLabel outputLabel;
 private javax.swing.JTextField outputTextField;
 private javax.swing.JList<String> parentsList;
 private javax.swing.JScrollPane parentsScrollPane;
 private javax.swing.JButton removeChildButton;
 private javax.swing.JSeparator separator1;
 private javax.swing.JSeparator separator2;
 private javax.swing.JSeparator separator3;
 private javax.swing.JSeparator separator4;
 // End of variables declaration//GEN-END:variables
}
